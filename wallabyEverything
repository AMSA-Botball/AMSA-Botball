#include <kipr/botball.h>
#include <stdbool.h>

static double wheelDiameter = 6.75;
static double speed = 1000;
static double friction = 1;
static double distMultiplier = 1.754;
static double angleMultiplier = 13;
static double pi = 3.14159265358979;
void moveForward(double distance) {
    double ticks = abs(1000000*(distance*49/48)*friction/(pi*wheelDiameter*speed))*distMultiplier;
    printf("I'm moving forward \n");
    mav(1, 700);
    mav(0, -700);
    msleep(ticks);
    ao();
}

void moveBackward(double distance) {
    double ticks = abs(1000000*(distance*49/48)*friction/(pi*wheelDiameter*speed))*distMultiplier;
    printf("I'm moving backward \n");
    mav(1, -700);
    mav(0, 700);
    msleep(ticks);
    ao();
}

void turnLeft(double angle) {
    printf("I'm turning left\n");
    mav(1, -500);
    mav(0, -500);
    msleep(angle*angleMultiplier);
    ao();
}

void turnRight(double angle) {
    printf("I'm turning right\n");
    mav(1, 500);
    mav(0, 500);
    msleep(angle*angleMultiplier);
    ao();
}

void clampClaw(int position){ // 1 for opened, 0 for closed
    enable_servos();
    if (position == 0) { printf("Closing claw!\n"); }
    else { position = 1; printf("Opening claw!\n"); }
    set_servo_position(0,(position*1600)+100);
}

bool isYellow() {
    camera_open();
    bool y = false;
    int iter = 0;
		while (iter < 10 && !y) {
        camera_update(); // updates camera to most recent image
        if (get_object_count(0) > 0) {
        	printf("Yellow count: %i\n", get_object_area(0,0));
          if (get_object_area(0,0) >= 1000) {
              y = true;
          }
        } else { printf("No object found!\n"); }
        msleep(500);
     	iter = iter + 1;
  	}
    return y;
}

int main() {
	// wallaby is placed in the starting bin nearest the end bin
    //wait_for_light(0);
    
	shut_down_in(120);
	enable_servos();
    clampClaw(0);
	int spot = 0;
	moveBackward(46);
	if (isYellow()) { 
    	spot = 1; 
  		moveBackward(56);
   		msleep(500);
	}
	else { 
    	moveBackward(56);
  		if (isYellow()) { spot = 2; }
  	  	else { spot = 3; }
	}
    printf("The yellow cube is in section %i\n", spot);

    // grab cubes
    moveForward(12);
    msleep(500);
    turnRight(85);
    msleep(500);
    clampClaw(1);
    msleep(500);
    moveForward(70);
    msleep(500);
    clampClaw(0);
    msleep(500);
    moveBackward(34);
    msleep(500);
    turnLeft(86);
    msleep(500);
    moveForward(102);
    msleep(500);
    moveBackward(102);
    msleep(500);
    turnRight(174);
    msleep(500);
    moveForward(102);
    msleep(500);
    moveBackward(102);
    msleep(500);
    turnRight(85);
    msleep(500);
  
	// move to the cube
    if (spot == 1) { 
        turnRight(28);
        msleep(500);
        moveForward(55);
    }
    else if (spot == 2) { 
        turnRight(3);
        msleep(500);
        moveForward(42);
    }
    else if (spot == 3) { 
        turnLeft(28);
        msleep(500);
        moveForward(55);
    }
    
    msleep(500);
  
	disable_servos();
	return 0;
}
